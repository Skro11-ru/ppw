---
interface Props {
	title: string;
	price: number;
	features: {
		text: string;
		included: boolean;
	}[];
}

const { title, features, price } = Astro.props as Props;
---

<div
	class="grid grid-cols-[1fr_min-content_3fr] rounded-md border-2 border-accent max-sm:grid-cols-1"
>
	<div
		class="flex flex-col items-center justify-center border-r-2 border-accent bg-secondary py-5  max-sm:border-r-0 dark:bg-white"
	>
		<div class="text-3xl uppercase text-white dark:text-secondary">
			{title}
		</div>
		<div class="text-2xl text-accent">
			{price.toLocaleString('ru-RU')}&#8381;
		</div>
	</div>
	<div
		class="relative left-[-12px] m-auto h-[20px] w-[20px] rotate-45 border-2 border-accent dark:border-b-white dark:border-l-white dark:bg-white max-sm:hidden border-b-secondary border-l-secondary bg-secondary"
	>
	</div>

	<ul
		class="flex flex-col flex-wrap max-h-[220px] gap-x-10 py-5 max-sm:px-6 max-lg:flex-nowrap max-lg:max-h-none max-"
	>
		{
			features.map((feature) => (
				<li
					class="flex items-center gap-1 "
					class:list={[{ 'opacity-20': !feature.included }]}
				>
					<!--<span>-->
					<!--	{feature.included ? (-->
					<!--		<Icon name="mdi:check-circle-outline" class="text-green-500" />-->
					<!--	) : (-->
					<!--		<Icon name="mdi:close-circle-outline" class="text-red-500" />-->
					<!--	)}-->
					<!--</span>-->
					<span>{feature.text}</span>
				</li>
			))
		}
	</ul>
</div>
